// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a Vultr SSH key resource. This can be used to create, read, modify, and delete SSH keys.
 * 
 * ## Example Usage
 * 
 * 
 * 
 * ```typescript
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-vultr/blob/master/website/docs/r/ssh_key.html.markdown.
 */
export class SshKey extends pulumi.CustomResource {
    /**
     * Get an existing SshKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SshKeyState, opts?: pulumi.CustomResourceOptions): SshKey {
        return new SshKey(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vultr:index/sshKey:SshKey';

    /**
     * Returns true if the given object is an instance of SshKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SshKey {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SshKey.__pulumiType;
    }

    /**
     * The date the SSH key was added to your Vultr account.
     */
    public /*out*/ readonly dateCreated!: pulumi.Output<string>;
    /**
     * The name/label of the SSH key.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The public SSH key.
     */
    public readonly sshKey!: pulumi.Output<string>;

    /**
     * Create a SshKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SshKeyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SshKeyArgs | SshKeyState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as SshKeyState | undefined;
            inputs["dateCreated"] = state ? state.dateCreated : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["sshKey"] = state ? state.sshKey : undefined;
        } else {
            const args = argsOrState as SshKeyArgs | undefined;
            if (!args || args.sshKey === undefined) {
                throw new Error("Missing required property 'sshKey'");
            }
            inputs["name"] = args ? args.name : undefined;
            inputs["sshKey"] = args ? args.sshKey : undefined;
            inputs["dateCreated"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(SshKey.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SshKey resources.
 */
export interface SshKeyState {
    /**
     * The date the SSH key was added to your Vultr account.
     */
    readonly dateCreated?: pulumi.Input<string>;
    /**
     * The name/label of the SSH key.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The public SSH key.
     */
    readonly sshKey?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SshKey resource.
 */
export interface SshKeyArgs {
    /**
     * The name/label of the SSH key.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The public SSH key.
     */
    readonly sshKey: pulumi.Input<string>;
}
