// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vultr
{
    public static class GetServer
    {
        /// <summary>
        /// Get information about a Vultr server.
        /// 
        /// {{% examples %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetServerResult> InvokeAsync(GetServerArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetServerResult>("vultr:index/getServer:getServer", args ?? new GetServerArgs(), options.WithVersion());
    }


    public sealed class GetServerArgs : Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetServerFilterArgs>? _filters;

        /// <summary>
        /// Query parameters for finding servers.
        /// </summary>
        public List<Inputs.GetServerFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetServerFilterArgs>());
            set => _filters = value;
        }

        public GetServerArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetServerResult
    {
        /// <summary>
        /// The server's allowed bandwidth usage in GB.
        /// </summary>
        public readonly string AllowedBandwidth;
        /// <summary>
        /// The server's application ID.
        /// </summary>
        public readonly string AppId;
        /// <summary>
        /// Whether auto backups are enabled on this server.
        /// </summary>
        public readonly string AutoBackups;
        /// <summary>
        /// The server's cost per month in USD.
        /// </summary>
        public readonly string CostPerMonth;
        /// <summary>
        /// The server's current bandwidth usage in GB.
        /// </summary>
        public readonly double CurrentBandwidth;
        /// <summary>
        /// The date the server was added to your Vultr account.
        /// </summary>
        public readonly string DateCreated;
        /// <summary>
        /// The server's default password.
        /// </summary>
        public readonly string DefaultPassword;
        /// <summary>
        /// The description of the disk(s) on the server.
        /// </summary>
        public readonly string Disk;
        public readonly ImmutableArray<Outputs.GetServerFilterResult> Filters;
        /// <summary>
        /// The ID of the firewall group applied to this server.
        /// </summary>
        public readonly string FirewallGroupId;
        /// <summary>
        /// The server's IPv4 gateway.
        /// </summary>
        public readonly string GatewayV4;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The server's internal IP address.
        /// </summary>
        public readonly string InternalIp;
        /// <summary>
        /// The server's current KVM URL. This URL will change periodically. It is not advised to cache this value.
        /// </summary>
        public readonly string KvmUrl;
        /// <summary>
        /// The server's label.
        /// </summary>
        public readonly string Label;
        /// <summary>
        /// The physical location of the server.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The server's main IP address.
        /// </summary>
        public readonly string MainIp;
        /// <summary>
        /// The server's IPv4 netmask.
        /// </summary>
        public readonly string NetmaskV4;
        /// <summary>
        /// The operating system of the server.
        /// </summary>
        public readonly string Os;
        /// <summary>
        /// The server's operating system ID.
        /// </summary>
        public readonly string OsId;
        /// <summary>
        /// Charges pending for this server's subscription in USD.
        /// </summary>
        public readonly string PendingCharges;
        /// <summary>
        /// The server's plan ID.
        /// </summary>
        public readonly string PlanId;
        /// <summary>
        /// Whether the server is powered on or not.
        /// </summary>
        public readonly string PowerStatus;
        /// <summary>
        /// The amount of memory available on the server in MB.
        /// </summary>
        public readonly string Ram;
        /// <summary>
        /// The region ID (`DCID` in the Vultr API) of the server.
        /// </summary>
        public readonly string RegionId;
        /// <summary>
        /// A more detailed server status (none, locked, installingbooting, isomounting, ok).
        /// </summary>
        public readonly string ServerState;
        /// <summary>
        /// The status of the server's subscription.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The server's tag.
        /// </summary>
        public readonly string Tag;
        /// <summary>
        /// A list of the server's IPv6 networks.
        /// </summary>
        public readonly ImmutableArray<ImmutableDictionary<string, object>> V6Networks;
        /// <summary>
        /// The number of virtual CPUs available on the server.
        /// </summary>
        public readonly string VpsCpuCount;

        [OutputConstructor]
        private GetServerResult(
            string allowedBandwidth,

            string appId,

            string autoBackups,

            string costPerMonth,

            double currentBandwidth,

            string dateCreated,

            string defaultPassword,

            string disk,

            ImmutableArray<Outputs.GetServerFilterResult> filters,

            string firewallGroupId,

            string gatewayV4,

            string id,

            string internalIp,

            string kvmUrl,

            string label,

            string location,

            string mainIp,

            string netmaskV4,

            string os,

            string osId,

            string pendingCharges,

            string planId,

            string powerStatus,

            string ram,

            string regionId,

            string serverState,

            string status,

            string tag,

            ImmutableArray<ImmutableDictionary<string, object>> v6Networks,

            string vpsCpuCount)
        {
            AllowedBandwidth = allowedBandwidth;
            AppId = appId;
            AutoBackups = autoBackups;
            CostPerMonth = costPerMonth;
            CurrentBandwidth = currentBandwidth;
            DateCreated = dateCreated;
            DefaultPassword = defaultPassword;
            Disk = disk;
            Filters = filters;
            FirewallGroupId = firewallGroupId;
            GatewayV4 = gatewayV4;
            Id = id;
            InternalIp = internalIp;
            KvmUrl = kvmUrl;
            Label = label;
            Location = location;
            MainIp = mainIp;
            NetmaskV4 = netmaskV4;
            Os = os;
            OsId = osId;
            PendingCharges = pendingCharges;
            PlanId = planId;
            PowerStatus = powerStatus;
            Ram = ram;
            RegionId = regionId;
            ServerState = serverState;
            Status = status;
            Tag = tag;
            V6Networks = v6Networks;
            VpsCpuCount = vpsCpuCount;
        }
    }
}
