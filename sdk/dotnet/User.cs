// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vultr
{
    /// <summary>
    /// Provides a Vultr User resource. This can be used to create, read, modify, and delete Users.
    /// </summary>
    public partial class User : Pulumi.CustomResource
    {
        /// <summary>
        /// The access control list for the user. 
        /// </summary>
        [Output("acls")]
        public Output<ImmutableArray<string>> Acls { get; private set; } = null!;

        /// <summary>
        /// Whether API is enabled for the user. Default behavior is set to enabled.
        /// </summary>
        [Output("apiEnabled")]
        public Output<bool?> ApiEnabled { get; private set; } = null!;

        /// <summary>
        /// API Key that is assigned to this user.
        /// </summary>
        [Output("apiKey")]
        public Output<string> ApiKey { get; private set; } = null!;

        /// <summary>
        /// Email for this user.
        /// </summary>
        [Output("email")]
        public Output<string> Email { get; private set; } = null!;

        /// <summary>
        /// Name for this user.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Password for this user.
        /// </summary>
        [Output("password")]
        public Output<string> Password { get; private set; } = null!;


        /// <summary>
        /// Create a User resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public User(string name, UserArgs args, CustomResourceOptions? options = null)
            : base("vultr:index/user:User", name, args ?? new UserArgs(), MakeResourceOptions(options, ""))
        {
        }

        private User(string name, Input<string> id, UserState? state = null, CustomResourceOptions? options = null)
            : base("vultr:index/user:User", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing User resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static User Get(string name, Input<string> id, UserState? state = null, CustomResourceOptions? options = null)
        {
            return new User(name, id, state, options);
        }
    }

    public sealed class UserArgs : Pulumi.ResourceArgs
    {
        [Input("acls")]
        private InputList<string>? _acls;

        /// <summary>
        /// The access control list for the user. 
        /// </summary>
        public InputList<string> Acls
        {
            get => _acls ?? (_acls = new InputList<string>());
            set => _acls = value;
        }

        /// <summary>
        /// Whether API is enabled for the user. Default behavior is set to enabled.
        /// </summary>
        [Input("apiEnabled")]
        public Input<bool>? ApiEnabled { get; set; }

        /// <summary>
        /// Email for this user.
        /// </summary>
        [Input("email", required: true)]
        public Input<string> Email { get; set; } = null!;

        /// <summary>
        /// Name for this user.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Password for this user.
        /// </summary>
        [Input("password", required: true)]
        public Input<string> Password { get; set; } = null!;

        public UserArgs()
        {
        }
    }

    public sealed class UserState : Pulumi.ResourceArgs
    {
        [Input("acls")]
        private InputList<string>? _acls;

        /// <summary>
        /// The access control list for the user. 
        /// </summary>
        public InputList<string> Acls
        {
            get => _acls ?? (_acls = new InputList<string>());
            set => _acls = value;
        }

        /// <summary>
        /// Whether API is enabled for the user. Default behavior is set to enabled.
        /// </summary>
        [Input("apiEnabled")]
        public Input<bool>? ApiEnabled { get; set; }

        /// <summary>
        /// API Key that is assigned to this user.
        /// </summary>
        [Input("apiKey")]
        public Input<string>? ApiKey { get; set; }

        /// <summary>
        /// Email for this user.
        /// </summary>
        [Input("email")]
        public Input<string>? Email { get; set; }

        /// <summary>
        /// Name for this user.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Password for this user.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        public UserState()
        {
        }
    }
}
